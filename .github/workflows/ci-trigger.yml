name: Python CI

on:
  push:
    paths:
      - '**.py'              # 當 Python 檔案有變更時觸發
  pull_request:              # 當發 PR 時觸發
  workflow_dispatch:         # 允許手動觸發

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black pylint reviewdog

      # ---- 強制性檢查 (Blocking) ----
      - name: Run Flake8 (blocking: syntax & critical issues)
        run: flake8 --max-line-length=120 .

      - name: Run Pylint (blocking: fatal errors only)
        run: |
          find . -name "*.py" | xargs pylint --errors-only
        # <<--- 使用 find，比 "**/*.py" 更穩定

      # ---- 非強制性檢查 (Non-blocking, with PR comments) ----
      - name: Run Black (format check, advisory via PR comments)
        run: |
          black --check --diff . \
            | reviewdog -f=diff -name="black" -reporter=github-pr-review -level=warning
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Pylint (style check, advisory via PR comments)
        run: |
          find . -name "*.py" | xargs pylint --disable=all --enable=style,convention,warning,refactor \
            | reviewdog -efm="%f:%l:%c: %m" -name="pylint-style" -reporter=github-pr-review -level=info
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    needs: lint   # <<--- 若 lint 失敗，test 不會執行，CI 中斷
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run tests with pytest
        run: pytest --maxfail=5 --disable-warnings -v
        # <<--- pytest 出現失敗 (exit code != 0)，此 job fail，CI 中斷

  codeql:
    name: Analyze with CodeQL
    runs-on: ubuntu-latest
    needs: test   # <<--- 若 test 失敗，codeql 不會執行，CI 中斷
    permissions:
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: +security-and-quality   # 啟用更多安全/品質檢查規則

      - name: Install dependencies (optional)
        run: |
          python -m pip install --upgrade pip
          # pip install -r requirements.txt  # 如果有需求才打開

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        # <<--- CodeQL 就算找到漏洞，exit code 仍為 0，不會 fail CI
