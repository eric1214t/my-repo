name: Python CI

on:
  push:
    paths:
      - '**.py'
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black pylint reviewdog

      # ---- 強制性檢查 (Blocking) ----
      - name: Run Flake8 (blocking: syntax & critical issues)
        run: flake8 --max-line-length=120 .

      - name: Run Pylint (blocking: fatal errors only)
        run: pylint --errors-only **/*.py

      # ---- 非強制性檢查 (Non-blocking, with PR comments) ----
      - name: Run Black (format check, advisory via PR comments)
        run: |
          black --check --diff . | reviewdog -f=diff -name="black" -reporter=github-pr-review -level=warning
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Pylint (style check, advisory via PR comments)
        run: |
          pylint --disable=all --enable=style,convention,warning,refactor **/*.py \
            | reviewdog -efm="%f:%l:%c: %m" -name="pylint-style" -reporter=github-pr-review -level=info
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run tests with pytest
        run: pytest --maxfail=5 --disable-warnings -v

  codeql:
    name: Analyze with CodeQL
    runs-on: ubuntu-latest
    needs: test
    permissions:
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: +security-and-quality

      - name: Install dependencies (optional)
        run: |
          python -m pip install --upgrade pip
          # pip install -r requirements.txt

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
