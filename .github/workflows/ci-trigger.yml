# .github/workflows/ci.yml
name: Python CI Checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      # 測試多個 Python 版本
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    # 步驟 1: 取得程式碼
    - name: Checkout repository
      uses: actions/checkout@v4

    # 步驟 2: 設定 Python 環境
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    # 步驟 3: 安裝依賴套件
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # 步驟 4: 執行程式碼風格檢查 (Lint)
    # flake8 會檢查語法錯誤、不符合 PEP8 風格的程式碼
    - name: Lint with flake8
      run: |
        # --count: 顯示錯誤總數
        # --select=E9,F63,F7,F82: 只報告特定類型的錯誤 (例如語法錯誤、未定義變數)
        # --show-source: 顯示有問題的程式碼行
        # --statistics: 顯示每個錯誤的統計數量
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # 如果需要更嚴格的風格檢查，可以直接執行 `flake8 .`
        
    # 步驟 5: 執行單元測試
    - name: Test with pytest
      run: |
        pytest