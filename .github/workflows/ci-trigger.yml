name: Python CI

on:
  push:
    paths:
      - '**.py'                  # 只偵測 Python 檔案

  workflow_dispatch:              # 允許手動觸發



jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black pylint

      - name: Run Flake8
        run: flake8 --max-line-length=120 .

      - name: Run Black (Check for formatting issues)
        run: black --check --verbose .

      - name: Run Pylint
        run: pylint --max-line-length=120 **/*.py

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run tests with pytest
        run: pytest --maxfail=5 --disable-warnings -v

  codeql:
    name: Analyze with CodeQL
    runs-on: ubuntu-latest
    permissions: # CodeQL 需要這些權限才能上傳結果
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # 建議更新到 v4

      # 1. 初始化 CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3 # <-- 這是修正的關鍵點
        with:
          languages: python
          # queries: +security-and-quality

      # 這個步驟是讓 CodeQL 分析你的依賴套件
      # 如果你的專案有 requirements.txt，這個步驟很重要
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 2. 執行 CodeQL 分析
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3 # <-- 建議更新到 v3
